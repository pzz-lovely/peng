    java.util.concurrent.ConcurrentLinkedQueue<E>
    ConcurrentLinkedQueue<E>()
    构造一个可以被多线程安全访问的无边界非阻塞的队列

    java.util.concurrent.ConcurrentSkipListQueue<E>
    ConcurrentSkipListSet<E>()
    ConcurrentSkipListSet<E(Comparator<? super E>comp)
    构造一个可以被多线程安全访问的有序集。第一个构造器要求元素实现Comparable接口

    java.util.concurrent.ConcurrentHashMap<K,V>
    java.util.concurrent.ConcurrentSkipListMap<K,V>
    ConcurrentHashMap<K,V>()
    ConcurrentHashMap<K,V>(int initialCapacity)
    ConcurrentHashMap<K,V>(int initialCapacity,float loadFactor,int concurrencyLevel)
    构建一个可以被多线程安全访问的散列映射表
        参数: initialCapacity 集合的初始容量
            loadFactor 控制调整:如果每一个同的平均负载超过这个因子，表的大小会被重新调整。默认值为0.75
            concurrencyLevel 并发写者的估计数目
    ConcurrentSkipListMap<K,V>()
    ConcurrentSkipListSet<K,V>(Comparable<? super K> comp)
    构造一个可以被多线程安全访问的有序的映像表。第一个构造器要求键要求实现Comparable接口
