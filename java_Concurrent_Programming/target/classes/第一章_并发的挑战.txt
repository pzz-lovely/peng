    1.1上下文切换
        Cpu通过时间片分配算法来循环执行任务当前任务执行一个时间片后悔切换到下一个任务，但是，在切换前会保存上一个任务的状态，以便下次切换回这个任务是，可以再加载这个任务的(线程)状态。所以任务从保存到再加载的过程就是上下文切换。
    1.1.3减少上下文切换
        减少上下文切换的方法有无锁并发编程，CAS算法，使用最少线程和使用协程
        1.无锁并发编程。多线程竞争时，会引起上下文切换，所有多线程处理数据时，可以用一些方法来避免使用锁，如将数据的ID按照Hash算法取模分段，不同的线程处理不同的数据
        2.CAS算法。java的Atomic包使用CAS算法来更新数据，而不需要加锁
        3.使用最少线程。避免创建不需要的线程，比如任务很少，但是创建了很多线程来处理，这样会造成大量线程都处于等待状态。
        4.协程:在单线程里使用多任务的调度，并在单线程里维持多个任务间的切换
    1.2死锁
        避免死锁:
            1.避免一个线程同时获取多个锁
            2.避免一个线程在所内同时占有多个资源，尽量保证每个锁只占用一个资源
            3.尝试使用定时锁，使用lock.tryLock(timeout,unit)来台使用内部锁机制
            4.对于数据库苏，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况。