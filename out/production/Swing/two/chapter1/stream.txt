    1.流并不存储器元素 =。这元素可能存储在底层的集合中，或者是按需生成的。
    2.流的操作不会修改其数据源
    3.流的操作是尽可能惰性执行的。

    流的转换会产生一个新的流，它的元素派生自另一个流中的元素。
    filter转换会产生一个流它的元素与某种条件相匹配。

    约简是一种终结操作(terminal operation)，它们会将流约简为可以在程序中使用的非流值。


    java.util.Stream<T> interface
    Iterator<T> iterator()
    产生一个用于获取当前流中各个元素的迭代器。这是一种终结操作
    void forEach(Consumer<? super T> action)
    在流的每个元素上调用action。这是一种终结操作
    Object toArray()
    <A> A[] toArray(IntFunction<A[]> generator)
    产生一个对象数组，或者在将引用A[]::传递给构造器是，返回一个A类型数组。这些操作都是终结操作
    <R,A> R collect(Collector<? super T,A,R> collector)
    使用给定的收集器来收集当前流中的元素、Collectors类有用于许多收集器的工厂方法。


    java.util.Stream<T> interface extends BaseStream
    Stream<T> filter(Predicate<? super T> p)
    产生一个流，其中包含当前流中满足P的所有元素
    long count()
    产生当前流中元素的数量。这是一个终止操作

    java.util.Collection<E>
    default Stream<E> stream();
    default Stream<E> parallelStream()
    产生当前集合中所有元素的顺序或并行流

    java.util.function.Predicate interface
     boolean test(T t);

     java.util.stream.Collectors
     static <T> Collector<T,?,List<T>> toList()
     static <T> Collector<T,?,Set<T>> toSet()
     产生一个将元素到列表或者集中的收集器
     static <T,C extends Collection<T>> Collector<T,?,C> toCollection(Supplier<C> collectionFactory)
     产生一个将元素收集到任意集合中的收集器。可以传递一个诸如TreeSet::new的构造器应用
     static Collector<CharSequence,?,String> joining()
     static Collector<CharSequence,?,String> joining(CharSequence delimiter)
     static Collector<CharSequence,?,String> joining(CharSequence delimiter,CharsetSequence prefix,CharsetSequence suffix)
     产生一个连接字符串的收集器，分隔符会置于字符串之间，而第一个字符串之前可以有前缀，最后一个字符串可以有后缀 。如果没有指定，那么它们都为空。
     static<T> Collector<T,?,IntSummaryStatistics> summarizingInt(ToIntFunction<? super T> mapper)
     static<T> Collector<T,?,LongSummaryStatistics> summarizingLong(ToLongFunction<? super T> mapper)
     static<T> Collector<T,?,DoubleSummaryStatistics> summarizingDouble(ToDoubleFunction<? super T> mapper)
     产生能够生成(Int|Long|Double)SummaryStatistics对象收集器，通过它可以获得将mapper应用于每个元素所产生的结果的个数、总和、平均值、最大值和最小值

    java.utilIntSummaryStatistics
    LongSummaryStatistics
    DoubleSummaryStatistics
    long getCount()
    产生汇总后的元素的个数
    (int|long|double) getSum()
    double getAverage()
    产生汇总后的元素的总和或平均值，或者在没有任何元素时返回0
    (int|long|double) getMax()
    (int|long|double) getMin()
    产生汇总后的元素的最大值和最小值，或者在没有任何元素时，产生(Integer|Long|Double).(MAX|MIN)_VALUE