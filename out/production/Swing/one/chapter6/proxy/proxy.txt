    java.lang.reflect.InvocationHandler
    Object invoke(Object proxy,Method method,Object[] args)
    参数1proxy: proxy对象
    参数2method: 需要代理的类的 方法
    参数3args:需要代理的类的 方法的参数


    java.lang.reflect.Proxy
    static Class<?> getProxyClass(ClassLoader loader,Class<?>....interfaces)
    返回实现指定接口的代理类
    static Object newProxyInstance(ClassLoader loader,Class<?>[] interfaces,InvocationHandler handler)
    构造实现指定 接口 的 代理类 的一个 新实例
    所有方法会调用 给定处理器对象[handler]的invoke方法。

    static boolean isProxyClass(Class<?> cl)
    如果cl是一个代理实现类返回true


