TreeSet类和散列集十分类似，它比散列集有所改进。树集是一个有序集合(sorted collection)
可以以任意顺序将元素插入到集合中。在对集合进行遍历时，每个值将自动地按照顺序后的排序呈现。
add() 每次将一个元素添加到树中时，都被放置到正确的排序位置上。
    里面也有一个 NavigableMap PRESENT
    java.util.TreeSet<E>
    TreeSet()
    TreeSet(Comparator<? super E > comparator)
    构建一个空树集
    TreeSet(Collection<? extends E> elements)
    TreeSet(SortedSet<E> s)
    构建一个树集，并增加 一个集合或有序集中的所有元素

    java.util.SortedSet
    Comparator<? super E> comparator()
    返回用于对元素进行排序的比较器。如果元素用Comparable接口的compareTo方法进行比较返回null
    E first()
    E last()
    返回有序集中的最小元素或最大元素。

    java.util.NavigableSet<E> TreeSet父类
    E higher(E value)
    E lower(E value)
    返回大于value的最小元素或小于value的最大元素，如果没有这样的元素则返回null
    E ceiling(E value)
    E floor(E value)
    返回大于等于value的最小元素或小于等于value的最大元素，如果没有这样的元素则返回null

    Iterator<E> descendingIterator()
    返回一个按照递减顺序遍历集中元素的迭代器


    连链散列集与映射
    LinkedHashSet与LinkedHashMap类用来记住插入元素项的顺序
    链接散列映射将用访问顺序，而不是插入顺序，对映射条目进行迭代。每次调用get或put，受到影响的条目将从当前位置删除，并放到条目链表的尾部(只有条目在链表中的位置会受影响，而散列表中的桶不会受影响。一条目总位于键散列码对应的桶中)。
    访问顺序对于实现高速缓存的"最近最少使用"原则十分重要。


