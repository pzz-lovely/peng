
    java.util.concurrent.Callable<V> 异步
    V call()
    运行一个将产生结果的任务

    java.util.concurrent.Future<V>
    V get()
    V get(long time,TimeUnit unit)
    获取结果，如果没有结果可用，则阻塞直到真正得到结果超过指定的时间为止。如果不成功第二个方法会抛出TimeoutException
    boolean cancel(boolean mayInterrupt)
    尝试取消这一任务的运行。如果任务已经开始，并且mayInterrupt参数值为true，他就会被中断。如果成功执行了取消操作，返回true
    boolean isCancelled()
    如果任务在完成之前被取消了，则返回true
    boolean isDone()
    如果任务结束，无论正常结束。中途取消或发生异常，都返回true

    java.util.concurrent.FutureTask<V>
    FutureTask(Callable<V> task)
    FutureTask(Runnable task,V result)
    构造一个即是Future<V>又是Runnable对象
