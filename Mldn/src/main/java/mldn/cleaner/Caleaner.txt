Cleaner专属的回收线程 JDK1.9

    static Cleaner create()
    创建一个回收类。根据内部对象Cleaner.CleanerImpl.start();为守护线程。
    Cleaner.Cleanable register(Object obj, Runnable action)
    注册一个回收线程



    对象的声明周期:
    1.创建阶段：每当使用关键字new就表示要开辟新的堆内存空间，同时每一个新的对象实例化的时候都一定要去执行类中的构造方法，构造方法的目的是为了类中成员属性的初始化。
    2.应用阶段：利用指定的对象名称可以直接进行类之中的方法调用处理。
    3.不可见阶段：如果说现在某一个方法内部已经有一个对象，则该方法执行完毕后将 不在使用。
    4.不可达阶段：某一块堆内存已经不再任何的栈内存所指向，那么这块空间就将成为垃圾空间。
    5.收集阶段：JVM会自动的进行此块垃圾空间的标记，标记之后将准备通过GC回收释放；JDK1.8以前的版本使用都是finalize()方法，而JDK1.9以后的版本推荐使用Cleaner来完成。
    6.释放阶段：JVM重新回收垃圾的堆内存空间，供后续新的对象使用。